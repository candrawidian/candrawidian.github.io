1. Apa yang kamu ketahui tentang Version Control, (usahakan pergunakan wawasan & bahasa sendiri)
Jawab: Version control adalah sistem yang mengelola perubahan sebuah dokumen ( bisa sebuah file, source code, atau informasi lainnya) yang dibuat secara digital di komputer. Dengan menggunakan version control system kita dapat bekerja berkolaborasi dengan lebih baik. Mengetahui siapa yang melakukan dan kapan perubahan tersebut. Memungkinkan kembali ke keadaan sebeul perubahan. 
2. Jelaskan apa itu GIT?
Jawab: GIT adalah sebuah software Version Control System yang memungkinkan kita mengelola perubahan pada sebuah folder(repo).
3. Apa yang kamu ketahui tentang Framework khususnya Web Framework, sebutkan apa saja web framework
yang kamu ketahui (usahakan pergunakan wawasan & bahasa sendiri)?
Jawab: Framework adalah sebuah software yang memudahkan programer dalam membuat aplikasi web karena didalamnya sudah ada plugin dan fungsi fungsi yang dapat membentuk sistem agar terkonsep dan terstruktur dengan baik.
Macam-macam framework:
ASP.NET Core, CakePHP, Catalyst, CodeIgniter, CppCMS, Django, Express.js, Gridfyx PHP, Laravel, Mojolicious, Ruby on Rails, Sails.js, Spring MVC, Wt (web toolkit), Zend Framework, Backbone.js, AngularJS, Angular, EmberJS, ReactJS dan Vue.js
4. Jelaskan istilah - istilah berikut: REST API, SQL, HTTP, UI Framework (usahakan pergunakan wawasan &
bahasa sendiri)?
Jawab: - REST API adalah gaya arsitektural perangkat lunak yang di dalamnya mendefinisikan aturan-aturan untuk membuat web service.
- SQL adalah bahasa pemrograman khusus yang digunakan untuk memanajemen data dalam RDBMS.
- HTTP adalah protokol jaringan lapisan aplikasi (application layer) yang dikembangkan untuk membantu proses transfer antar komputer.
- UI Framework adalah sebuah software yang dibuat khusus untuk menangani antarmuka sebuah web sehingga memudahkan seorang UI Engineer dalam membuat aplikasi web.
5. Apa yang dimaksud dengan RDBMS dan noSQL, jelaskan perbedaannya?
jawab: RDBMS adalah program yang melayani sistem basis data yang entitas utamanya terdiri dari tabel-tabel yang mempunyai relasi dari satu tabel ke tabel yang lain.
-NoSQL adalah konsep serta model basis data yang fleksibel. Secara general maupun spesifik NoSQL tidak mengikuti kaidah-kaidah database relasional (RDBMS). NoSQL tidak pula menggunakan bahasa query SQL.
Perbedaannya adalah 
1. Dalam basisdata SQL data dalam bentuk tabel yang terdiri dari sejumlah baris, sedangkan data dalam NoSQL tidak memiliki definisi skema standar yang harus dipatuhi. Basisdata NoSQL memiliki skema yang dinamis sementara basisdata SQL terdiri dari skema yang telah ditetapkan.

2. Basisdata NoSQL adalah horizontal terukur sementara SQL DB vertikal terukur. Untuk memperbesar skala NoSQL DB, tambahkan server DB di cluster untuk load balancing. Untuk memperbesar skala SQL DB, tambahkan tenaga dari CPU, SSD, RAM dan perangkat keras lainnya pada server. Ini berarti NoSQL adalah pilihan terbaik jika skalabilitas adalah pertimbangan utama.

3. Basisdata SQL lebih cocok untuk lingkungan permintaan-intensif kompleks. Hal ini karena NoSQL tidak memiliki antarmuka standar untuk melakukan query kompleks pada tingkat tinggi dan query pada NoSQL tidak sebaik query SQL.

4. Basisdata NoSQL lebih cocok untuk penyimpanan data hirarkis. Hal ini karena NoSQL mengikuti metode penyimpanan pasangan kunci-nilai yang mirip dengan JSON data. Hal ini membuat NoSQL pilihan terbaik untuk data besar sejak saat ini, kebanyakan vendor SQL telah menambahkan dukungan tipe-JSON serta dukungan dokumen XML.

Tugas Ketiga - Algorithma (Gunakan Bahasa pemrograman Golang)
1) Buatlah sebuah fungsi dengan nama is_palindrom dengan output berupa nilai boolean (true/false) untuk
mengecek sebuah kata termasuk palindrom atau bukan
INPUT: (String) Word
OUTPUT : (Boolean) TRUE / FALSE
misal :
input -> kata level maka outputnya harus True
input -> kata taat maka outputnya harus True
Input -> kata halo maka outputnya harus False
Tidak diperkenankan menggunakan fitur/fungsi bawaan dari bahasa pemrograman yang digunakan

Jawab: 
			package main

			import "fmt"

			func is_palindrome(input string) bool {

				for i := 0; i < len(input)/2; i++ {
					if input[i] != input[len(input)-i-1] {
						return false
					}
				}
				return true
			}

			func main() {
				fmt.Println(is_palindrome("level"))
				fmt.Println(is_palindrome("taat"))
				fmt.Println(is_palindrome("halo"))
			}

2) Buatlah sebuah fungsi dengan nama words_count untuk mengitung jumlah kemunculan sebuah kata
dalam suatu kalimat, input pertama berupa kalimat dengan tipe data string , input kedua berupa kata yang
ingin dihitung jumlah kemunculannya, output berupa data integer,
INPUT PERTAMA: `A wonderful serenity has taken possession of my entire soul, like these sweet
mornings of spring which I enjoy with my whole heart. I am alone, and feel the charm of existence in
this spot, which was created for the bliss of souls like mine. I am so happy `
INPUT KEDUA: ‘like’
OUTPUT: 2

Jawab :  package main
 
			import (
			    "fmt"
			    "strings"
			)
			func words_count(str string) map[string]int {
			    wordList := strings.Fields(str)
			    counts := make(map[string]int)
			    for _, word := range wordList {
			        _, ok := counts[word]
			        if ok {
			            counts[word] += 1
			        } else {
			            counts[word] = 1
			        }
			    }
			    return counts
			}
			 
			func main() {
			    input1 := "A wonderful serenity has taken possession of my entire soul, like these sweet mornings of spring which I enjoy with my whole heart. I am alone, and feel the charm of existence in this spot, which was created for the bliss of souls like mine. I am so happy"
				input2 := "like"
				
			    for input,output := range words_count(input1){
				if input ==  input2{
			        fmt.Println(output)
			    }
			}
			}

3. Buatlah sebuah fungsi dengan nama simple_parser untuk me’replace kata di dalam sebuah text (sebagai
input pertama) dengan dengan kata lain (sebagai input kedua denga tipe key value).
INPUT PERTAMA: `Nama saya {nama}, usia {usia} tahun, saya berprofesi sebagai {profesi}`
INPUT KEDUA: { nama: ‘Tri Pamungkas’, usia: 30, profesi: ‘database developer’}
OUTPUT: `Nama saya Tri Pamungkas, usia 30 tahun, saya berprofesi sebagai database developer`

Jawab: package main
 
		import (
		    "fmt"
		    "strconv"
		)

		func simple_parser(nama string, usia int, profesi string) string{
			agenow := strconv.Itoa(usia)
			return "Nama saya "+ nama +", usia "+ agenow +" tahun, saya berprofesi sebagai " + profesi
		}
		 

		func main() {
		    fmt.Println(simple_parser("Tri Pamungkas",30,"database develover"))
		}